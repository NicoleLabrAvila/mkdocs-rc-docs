---
title: TractoR
categories:
 - Applications
 - Software

layout: application
---
{{Applications

|name=TractoR
|platform=Legion and Myriad
|version=3.2.5
|short=
TractoR is an R application for reading, writing, analysing and visualising magnetic resonance images. 
|about=
TractoR (Tractography with R) is an R application for reading, writing, analysing and visualising magnetic resonance images stored in Analyze, NIfTI and DICOM file formats. It also contains functions specifically designed for working with diffusion MRI and tractography, including a standard implementation of the neighbourhood tractography approach to white matter tract segmentation. TractoR is developed at UCL by Jonathan Clayden and colleagues.

TractoR 3.2.5 is available on Legion, Myriad and Aristotle.

TractoR packages can be used from within an R session. In addition a control script is provided that allows using TractoR without interacting with R. On Legion and Myriad TractoR is intended to be run primarily within batch jobs however you may run short (less than 5 minutes execution time) interactive tests on the Login Nodes and longer interactive tests on the User Test Nodes or Aristotle.
|link1= [http://www.tractor-mri.org.uk/ TractoR website]
|setup-intro=
|module-intro=To use TractoR version 3.2.5 in either mode (within R or using the control script) you need to load the following modules:
|moduleunload1=compilers mpi
|moduleunload3=
|moduleunload4=
|moduleadd1=
|moduleadd2=
|moduleadd3=
|moduleadd4=
|moduleload1=r/new <br />
module unload java
|moduleload2=java/1.8.0_45
|moduleload3=qt/4.8.6/gnu-4.9.2
|moduleload4=vtk/6.2.0/gnu-4.9.2
|moduleload5=fsl/5.0.10
|moduleload6=tractor/3.2.5
|source1=$FSLDIR/etc/fslconf/fsl.sh
|setup-notes=
The:
<code>
r/new
</code>
is currently needed to get R 3.5.1 and the:

<code>
module unload java<br />
module load java/1.8.0_45
</code>

is because R and FSL depend of slightly different versions.


TractoR also uses the FMRIB Software Library (FSL) hence the need to source its setup script. You should now be able to run a TractoR command, for example:
<code>
 tractor list
</code>
which should display the list of available commands:
<code>
 Starting TractoR environment...

DICOM handling:
  age, dicomread, dicomsort, dicomtags

Image processing:
  binarise, components, morph, smooth, trim

General analysis:
  apply, extract, imageinfo, imagestats, mean, mkroi, reshape, values

Visualisation:
  slice, view

Registration:
  reg-apply, reg-check, reg-info, reg-linear, reg-nonlinear, reg-viz

Working with sessions:
  clone, import, status, transform

Diffusion processing:
  bedpost, dirviz, dpreproc, gradcheck, gradread, gradrotate, plotcorrections,
tensorfit, track, trkinfo, trkmap

Structural processing:
  deface, freesurf, parcellate

Heuristic neighbourhood tractography (deprecated):
  hnt-eval, hnt-interpret, hnt-ref, hnt-viz

Probabilistic neighbourhood tractography:
  pnt-data, pnt-em, pnt-eval, pnt-interpret, pnt-prune, pnt-ref, pnt-sample,
pnt-train, pnt-viz

Graph and network analysis:
  graph-build, graph-decompose, graph-extract, graph-props, graph-reweight,
graph-viz, graph2csv

Other scripts:
  chfiletype, compress, console, list, path, peek, platform, split, update

For information on a particular script, run "tractor -o <script>"

Experiment completed with 0 warning(s) and 0 error(s)

</code>
|script-title=
|script-intro=
Here is an example run script using the command script mode for submitting batch jobs to the clusters:
|script=
<nowiki>
#!/bin/bash -l

# Batch script to run an OpenMP threaded TractoR job on Legion/Myriad for
# TractoR Version 3.2.5

# 1. Force bash as the executing shell.
#$ -S /bin/bash

# 2. Request ten minutes of wallclock time (format hours:minutes:seconds).
#    Change this to suit your requirements.
#$ -l h_rt=0:10:0

# 3. Request 1 gigabyte of RAM. Change this to suit your requirements.
#$ -l mem=1G

# 4. Set the name of the job. You can change this if you wish.
#$ -N TractoR_job_1

# 5. Select 16 threads. The max possible on Legion is 32 and Myriad is 36
#$ -pe smp 16

# 6. Request 15 gigabyte of TMPDIR space (default is 10 GB)
#$ -l tmpfs=15G

# 7. Set the working directory to somewhere in your scratch space.  This is
# a necessary step as compute nodes cannot write to $HOME.
#
# NOTE: this directory must exist before submitting the job.
#
# Replace "<your_UCL_id>" with your UCL user ID :)
#$ -wd /home/<your_UCL_id>/Scratch/TractoR_output

# 8. Load correct modules for TractoR, R and FSL

module unload compilers mpi
module load r/new
module unload java
module load java/1.8.0_45
module load qt/4.8.6/gnu-4.9.2
module load vtk/6.2.0/gnu-4.9.2
module load fsl/5.0.10
module load tractor/3.2.5
module list
source $FSLDIR/etc/fslconf/fsl.sh

# 9. Create sub-drectory of working directory for this job.

mkdir subjects_$JOB_ID
cd subjects_$JOB_ID

# 10. Run TractoR commands - example from 
#    http://www.tractor-mri.org.uk/PNT-tutorial which uses supplied test data

tractor clone $TRACTOR_HOME/tests/data/session .
export TRACTOR_REFTRACT_SET=miua2017
tractor pnt-data session TractName:genu DatasetName:genu_data SearchWidth:7
echo ''
echo '--------------------------------------------'
echo ''
tractor pnt-eval TractName:genu DatasetName:genu_data ResultsName:genu_results
echo ''
echo '--------------------------------------------'
echo ''
tractor pnt-prune TractName:genu DatasetName:genu_data ResultsName:genu_results
echo ''
echo '--------------------------------------------'
echo ''
tractor slice session@FA genu.1 Z:max Alpha:log
echo ''
echo '--------------------------------------------'
echo ''
echo 'Job finished'
</nowiki>
|script-path= /shared/ucl/apps/TractoR/run-tractor.sh
|script-notes=
Please copy if you wish and edit it to suit your jobs. You will need to change the ''-wd /home/<your_UCL_id>/Scratch/TractoR_output'' grid engine directives and the TractoR commands. You may also need to change the ''-pe smp 16'', ''-l mem=1G'' and ''-l h_rt=0:10:0'' directives. The script can be submitted using the simplest form of the qsub command ie:
<code>
 qsub run-tractor.sh
</code>

Output will be written to ''/home/<your_UCL_id>/Scratch/TractoR_output/subjects_$JOB_ID''.
|script2-title=
|script2-intro=
|script2=
|script2-path=
|script2-notes=
|script3-title=
|script3-intro=
|script3=
|script3-path=
|script3-notes=
|coda-title=
|coda=

}}