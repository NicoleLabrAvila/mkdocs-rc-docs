---
title: ABAQUS
layout: application
---
{{Applications

|name=ABAQUS
|platform=Legion and Grace
|version=2017
|short=ABAQUS is a commercial software suite for finite element analysis and computer-aided engineering. The UCL license is owned and managed by the Department of Mechanical Engineering.
|about=ABAQUS is a commercial software suite for finite element analysis and computer-aided engineering. The UCL license is owned and managed by the Department of Mechanical Engineering.
|link1=
|link2=
|link3=
|link4=
|setup-title=
|setup-intro=You must be authorised by the Mech Eng Department before you can be 
added to the group controlling access to AQAQUS (legabq).

ABAQUS is intended to be run primarily within batch jobs however you may run short (less than 15 minutes execution time) interactive work (setting up your model for example) on the Login Nodes and longer (up to two hours) on the User Test Nodes. Interactive work can be done using Abaqus/CAE GUI provided you have X-windows functionality enabled though your ssh connection. See our [[:Category:Legion User Guide | Legion User Guide]] for more information about enabling X-windows functionality and the User Test nodes.
|module-intro=You will need to load the ABAQUS module:
|moduleunload1=
|moduleunload2=
|moduleunload3=
|moduleunload4=
|moduleadd1=
|moduleadd2=
|moduleadd3=
|moduleadd4=
|moduleload1=abaqus/2017
|moduleload2=
|moduleload3=
|moduleload4=
|source1=
|setup-notes=You can now start eg Abaqus/CAE using:

<code>
abaqus cae
</code>

or:

<code>
abaqus viewer
</code>

for looking at results. A serial interactive analysis can be run using:

<code>
abaqus interactive job=myJobSerial input=myInputFile.inp
</code>

for example.
|scripts=
{{Script

|script-title=Example MPI parallel analysis job script 
|script-intro=Here is an example job script for submitting batch jobs to the cluster: 
|script-code=
<nowiki>
#!/bin/bash -l

# Batch script to run a MPI parallel ABAQUS job on Legion/Grace with the upgraded
# software stack under SGE.
#
# For Grace.

# Use qsub command like:
#
# qsub abaqus-par-mpi.sh

# 1. Force bash as the executing shell.
#$ -S /bin/bash

# 2. Request 1 hour of wallclock time (format hours:minutes:seconds).
#$ -l h_rt=1:0:0

# 3. Request 2 gigabyte of RAM per core.
#$ -l mem=2G

# 4. Reguest 32 MPI processes
#$ -pe mpi 32

# 5. Set the name of the job.
#$ -N Abaqus_par_job1

# 6. Set the working directory to somewhere in your scratch space.  This is
# a necessary step with the upgraded software stack as compute nodes cannot
# write to $HOME. 
#
# Replace <your userid> with your UCL userid where it occurs below.

#$ -wd /home/<your userid>/Scratch/Abaqus_examples

# 7. Set up ABAQUS envronment

module load abaqus/2017

INPUT_FILE=~<your userid>/ABAQUS/heattransfermanifold_cavity_parallel.inp
ABAQUS_ARGS=
ABAQUS_PARALLELSCRATCH=/home/<your userid>/Scratch/Abaqus/parallelscratch
mkdir -p $ABAQUS_PARALLELSCRATCH

mkdir -p $JOB_NAME.$JOB_ID
cd $JOB_NAME.$JOB_ID
cp $INPUT_FILE .

# 8. Run the application.

INPUT=`basename $INPUT_FILE`
abaqus interactive cpus=$NSLOTS mp_mode=mpi job=$INPUT.$JOB_ID input=$INPUT \
       scratch=$ABAQUS_PARALLELSCRATCH $ABAQUS_ARGS
</nowiki>
|script-path=/shared/ucl/apps/ABAQUS/abaqus-par-mpi.sh
|script-notes=Please copy if you wish and edit it to suit your jobs. You will need to change the input file and may wish to change wallclock time, memory per core, number of MPI processes etc.  The script can then be submitted using a qsub command like:
<code>
 qsub abaqus-par-mpi.sh
</code>
Results will be written to the directory ~Scratch/Abaqus_examples/Abaqus_par_job1.$JOB_ID where $JOB_ID is the Gird Engine job id of your job.

[[#top | back to top]]
}} 
|coda-title=
|coda=

}}