---
title: StarCD
layout: application
---
{{Applications

|name=StarCD
|platform=Legion
|version=4.22.058, 4.26.011, 4.26.022, 4.28.050
|short=
StarCD is a commercial package for modelling and simulating combustion and engine dynamics. 
|about=
StarCD is a commercial package for modelling and simulating combustion and engine dynamics. 
|setup-intro=
You must request access to the group controlling StarCD access (legstarcd) to use it. The license is owned by the Department of Mechanical Engineering who will need to approve your access request. 
|module-intro=
|moduleunload1=
|moduleunload2=
|moduleunload3=
|moduleunload4=
|moduleadd1=
|moduleadd2=
|moduleadd3=
|moduleadd4=
|moduleload1=star-cd/4.28.050
|moduleload2=
|moduleload3=
|moduleload4=
|setup-notes=for the latest version of StarCD.
|script-title=
|script-intro=
Here is an example run script for submitting batch jobs to the cluster:
|script=
<nowiki>
#!/bin/bash -l

# 1. Force bash as the executing shell.
#$ -S /bin/bash

# 2. Job Name (shows up in qstat)
#$ -N StarCD

# 3. Merge output and error files
#$ -j y

# 4. Maximum runtime of job
#$ -l h_rt=0:20:00

# 5. Request 1 gigabyte of RAM per core.
#$ -l mem=1G

# 6. Request MPI environment with 32 processors
# Note: even if you only using 1 processor, you still need to specify -pe mpi and not -pe smp
# because StarCD needs a machinefile to be created in order to work.
#$ -pe mpi 32

# 7. Request one license per core
#$ -l starsuite=1

# 8. Run from the current working directory
#$ -cwd

module load star-cd/4.28.050
# run star without its tracker process as this currently causes multicore jobs to die early
star -notracker
</nowiki>
|script-path= 
|script-notes=
Please copy if you wish and edit it to suit your jobs. The script can then be submitted using the simplest form of the qsub command ie:
<code>
 qsub run-starcd.sh
</code>

Input files will be used from the current working directory, and output written to the same, so this should be submitted from a directory containing your input files in the Scratch area.

This example uses IBM Platform MPI which is the default MPI provided with StarCD. You can also run StarCD simulations using Intel MPI. To do this replace the  star command line with:

<code>
export I_MPI_FABRICS=shm:ofa

export I_MPI_FALLBACK=1

star -notracker -mpi=intel
</code>

Note: simulations run using Intel MPI may run faster than they do when using IBM Platform MPI.
|script2-title=
|script2-intro=
|script2=
|script2-path=
|script2-notes=
|script3-title=
|script3-intro=
|script3=
|script3-path=
|script3-notes=
|coda-title=
|coda=

}}